# 
msgid ""
msgstr ""
"Project-Id-Version: Introduction to OpenGeo Suite December 2013\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-06-21 19:32+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/apps/ol/dissectmap.rst:4
msgid "Understanding the map code"
msgstr ""

#: ../../source/apps/ol/dissectmap.rst:6
msgid ""
"As mentioned in the previous section, a map is generated by bringing "
"together the necessary:"
msgstr ""

#: ../../source/apps/ol/dissectmap.rst:8
msgid "Libraries"
msgstr ""

#: ../../source/apps/ol/dissectmap.rst:9
#: ../../source/apps/ol/dissectmap.rst:28
msgid "Markup"
msgstr ""

#: ../../source/apps/ol/dissectmap.rst:10
msgid "Style declarations"
msgstr ""

#: ../../source/apps/ol/dissectmap.rst:11
msgid "Initialization code"
msgstr ""

#: ../../source/apps/ol/dissectmap.rst:13
msgid ""
"Using our simple map from the previous section, let's look at each of these "
"parts in more detail. The :file:`map1.html` file should still be open in "
"your text editor."
msgstr ""

#: ../../source/apps/ol/dissectmap.rst:16
msgid "Library loading"
msgstr ""

#: ../../source/apps/ol/dissectmap.rst:18
msgid ""
"The header of the document loads necessary JavaScript and CSS files to be "
"included with the map. In the ``<head>`` element, the OpenLayers JavaScript "
"library is loaded (:file:`OpenLayers.js`), followed by a default stylesheet "
"(:file:`style.css`) that specifies how map-related elements should be "
"styled."
msgstr ""

#: ../../source/apps/ol/dissectmap.rst:25
msgid ""
"Let's skip the ``<style>`` tag for a moment, and jump down to the "
"``<body>``."
msgstr ""

#: ../../source/apps/ol/dissectmap.rst:30
msgid "The markup for the map generates a single document element:"
msgstr ""

#: ../../source/apps/ol/dissectmap.rst:36
msgid "This element will serve as the container for our map viewport."
msgstr ""

#: ../../source/apps/ol/dissectmap.rst:38
msgid ""
"Here we use a ``<div>`` element, although the container for the viewport can"
" be any block-level element."
msgstr ""

#: ../../source/apps/ol/dissectmap.rst:40
msgid ""
"We also give the container an ``id`` attribute so we can reference it in our"
" code."
msgstr ""

#: ../../source/apps/ol/dissectmap.rst:43
msgid "Map style"
msgstr ""

#: ../../source/apps/ol/dissectmap.rst:45
msgid ""
"We've already noticed that OpenLayers includes a default stylesheet. "
"However, OpenLayers doesn't make any guesses about the size of your "
"map/viewport container."
msgstr ""

#: ../../source/apps/ol/dissectmap.rst:47
msgid ""
"Because of this, we need to also include at least one style declaration to "
"make room on the page for the map. This is the ``<style>`` element in the "
"``<head>``:"
msgstr ""

#: ../../source/apps/ol/dissectmap.rst:58
msgid ""
"We use the map container's ``id`` value as a selector (``#map-id``), and "
"then we specify the width (``512px``) and the height (``256px``) for the map"
" container."
msgstr ""

#: ../../source/apps/ol/dissectmap.rst:60
msgid ""
"Although the style declarations are directly included in the ``<head>`` of "
"our document. In many cases, your map-related style declarations would be a "
"part of an external stylesheet as part of a larger website theme."
msgstr ""

#: ../../source/apps/ol/dissectmap.rst:63
msgid "Map initialization code"
msgstr ""

#: ../../source/apps/ol/dissectmap.rst:65
msgid ""
"The next step in generating your map is to include some initialization code."
" This is where we determine the **content** of our map. In our case, we have"
" included a ``<script>`` element at the bottom of our document's ``<body>`` "
"to do the work."
msgstr ""

#: ../../source/apps/ol/dissectmap.rst:67
msgid ""
"We put the initialization code at the bottom of the ``<body>`` of our "
"document, when we could have loaded it with the OpenLayers library in the "
"``<head>``. We did this because our initialization code cannot run until "
"both the OpenLayers library is loaded and the document element that serves "
"as the viewport container (the ``<div>``) is fully loaded. By including the "
"initialization code below this element in the ``<body>`` markup, we ensure "
"that the library is loaded and the viewport container is ready before "
"generating our OpenLayers map."
msgstr ""

#: ../../source/apps/ol/dissectmap.rst:82
msgid ""
"The first line of our script creates a new ``OpenLayers.Map`` object, which "
"is known as a **constructor**:"
msgstr ""

#: ../../source/apps/ol/dissectmap.rst:88
msgid ""
"This line also tells the map constructor to render the map in the the "
"viewport container, selected by its ``id`` attribute value (``map-id``)."
msgstr ""

#: ../../source/apps/ol/dissectmap.rst:90
msgid ""
"This constructor (referred to by the JavaScript variable name ``map``) will "
"create the map in the ``<div>`` element created above."
msgstr ""

#: ../../source/apps/ol/dissectmap.rst:92
msgid ""
"The above syntax is a shortcut for convenience. We could be more explicit "
"and provide a direct reference to the element (e.g. "
"``document.getElementById(\"map-id\")``)."
msgstr ""

#: ../../source/apps/ol/dissectmap.rst:94
msgid "The next few lines creates a map layer:"
msgstr ""

#: ../../source/apps/ol/dissectmap.rst:105
msgid ""
"Don't worry about the syntax here if this part is new to you. The important "
"part to understand is that our map view will be a collection of layers."
msgstr ""

#: ../../source/apps/ol/dissectmap.rst:107
msgid ""
"Here we have described one layer, a :abbr:`WMS (Web Map Service)` layer "
"served from our existing GeoServer instance, called \"earthmap\", and saved "
"this layer with the variable ``earth``."
msgstr ""

#: ../../source/apps/ol/dissectmap.rst:109
msgid "The next line adds our one layer to our map."
msgstr ""

#: ../../source/apps/ol/dissectmap.rst:115
msgid ""
"The final step is to set the initial geographic limits of the map display, "
"which is known as the **extent**. This specifies the minimum bounding "
"rectangle of the map area in the form of (Xmin,Ymin,Xmax,Ymax). There are a "
"number of ways to specify this initial extent. In our example, we use a "
"simple request to zoom to map to the maximum extent. By default, this "
"layer's maximum extent is the entire world in geographic coordinates, so our"
" map will zoom out all the way."
msgstr ""

#: ../../source/apps/ol/dissectmap.rst:121
msgid "And that's a very simple map!"
msgstr ""

#: ../../source/apps/ol/dissectmap.rst:123
msgid ""
"It's easy to get confused by multiple uses of the word \"map\". We named our"
" map constructor by the variable \"map\" in the first line of our "
"initialization code. If we had used the variable, say, \"hello\", our first "
"line of code would have been ``var hello = new OpenLayers.Map(\"map-"
"id\");``, and this line above would read ``hello.addLayer(world)``."
msgstr ""
