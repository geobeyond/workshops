# 
msgid ""
msgstr ""
"Project-Id-Version: Introduction to OpenGeo Suite December 2013\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-06-21 19:32+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/apps/gx/dissectmap.rst:4
msgid "Dissecting the map code"
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:6
msgid ""
"As demonstrated in the previous section, a map window is generated by "
"bringing together a minimal HTML document, application initialization code, "
"and configuration objects.  We'll look at each of these parts of our map in "
"a bit more detail."
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:9
msgid "Markup"
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:12
msgid "HTML"
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:14
msgid ""
"Every web application needs at least a basic HTML document as a container. "
"It does not need to contain human readable markup in this case, so it has an"
" empty ``<body>``."
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:20
msgid ""
"(This case differs from OpenLayers, where a block-level element was required"
" to position the map.)"
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:22
msgid ""
"All of the required script and style resources are loaded in the ``<head>`` "
"element ..."
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:25
msgid "Ext JS"
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:27
msgid "First we load Ext JS libraries:"
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:34
msgid ""
"Ext JS can be used as a standalone framework, or together with JavaScript "
"frameworks like JQuery. Depending on this environment, an appropriate "
"adapter has to be loaded first. Since we are using Ext JS standalone, we use"
" the ``ext-base.js`` library. In the second line, we load the main Ext JS "
"``ext-all.js`` library."
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:36
msgid "Finally, we load the stylesheet required by Ext JS:"
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:42
msgid ""
"This loads all CSS that Ext JS needs to use the default theme. To customize "
"your map application, additional CSS resources can be added."
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:45
msgid "OpenLayers"
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:47
msgid ""
"GeoExt also requires OpenLayers. So we also have to load the OpenLayers "
"libraries."
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:54
msgid "GeoExt"
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:56
msgid ""
"Finally, we can load the GeoExt library that pulls everything together:"
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:64
msgid ""
"When using GeoExt, you also benefit from all the functionality that "
"standalone Ext JS and OpenLayers provide. You can add GeoExt to your "
"existing Ext JS and OpenLayers applications without breaking anything."
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:67
msgid "Initialization Code"
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:69
msgid ""
"Initialization is done entirely in Javascript and usually consists of two "
"stages:"
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:71
msgid "initialize the application itself"
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:72
msgid "initialize the user interface"
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:99
msgid "Initialize the application"
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:101
msgid "To initialize the application, we:"
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:103
msgid ""
"Define an OpenLayers layer object (based on our local GeoServer ``earth`` "
"group layer)."
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:104
msgid "Create a new ``Ext.Window`` saved as as the variable mapwin"
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:107
msgid "Initialize the user interface"
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:109
msgid "To initialize the user interface, we:"
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:111
msgid "Call the .show() method on the Ext.Window"
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:114
msgid "Configuration Objects"
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:116
msgid ""
"The part of our map application where the map is drawn is contained in the "
"**configuration object** (see the comment in the above code)."
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:118
msgid ""
"In Ext JS, you create configuration objects instead of writing code for most"
" basic tasks, which usually makes application development easier and faster."
" All constructors take a single argument, which we will be referring to as a"
" \"configuration object\"."
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:120
msgid ""
"Like all JavaScript objects, this configuration object is wrapped in curly "
"braces, and contains ``key: value`` pairs. Let's have a look at the "
"configuration object for our map window:"
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:135
msgid ""
"In this code, we set some simple properties, like the ``title``, ``width`` "
"and ``height`` of our window."
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:137
msgid ""
"We also set the ``layout`` to \"fit\", which means that the window will have"
" one item that fills up the entire window space."
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:139
msgid ""
"Since other layouts can position more than just one item, we use an array "
"(square braces) for a list of the window's items -- in our case just one: a "
"*GeoExt Map Panel*."
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:141
msgid ""
"We configure our ``GeoExt.MapPanel``. To do this, we start a nested object "
"by declaring an ``xtype`` of \"gx_mappanel\"."
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:143
msgid ""
"The ``GeoExt.MapPanel`` configuration takes another property: an array of "
"``layers``."
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:145
msgid ""
"For our simple map window example, we just want to show a single WMS layer: "
"``world`` which we've already defined with a now familiar syntax."
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:149
msgid "The following two notations are equivalent:"
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:151
msgid "``new GeoExt.MapPanel({layers: [/* ... */]});``"
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:152
msgid "``{xtype: \"gx_mappanel\", layers: [/* ... */]});``"
msgstr ""

#: ../../source/apps/gx/dissectmap.rst:154
msgid ""
"Ext JS keeps a registry of available `components "
"<http://www.extjs.com/deploy/dev/docs/?class=Ext.Component>`_, called "
"\"xtypes\". GeoExt adds its components to this registry. To make them "
"distinguishable from other non-GeoExt components, their names start with the"
" \"gx\" prefix."
msgstr ""
